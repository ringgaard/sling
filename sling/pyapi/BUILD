package(default_visibility = ["//visibility:public"])

cc_library(
  name = "pyapi",
  srcs = [
    "pyapi.cc",
    "pyarray.cc",
    "pybase.cc",
    "pydatabase.cc",
    "pydate.cc",
    "pyframe.cc",
    "pymisc.cc",
    "pymyelin.cc",
    "pynet.cc",
    "pyparser.cc",
    "pyphrase.cc",
    "pyrecordio.cc",
    "pystore.cc",
    "pystring.cc",
    "pytask.cc",
    "pyweb.cc",
    "pywiki.cc",
  ],
  hdrs = [
    "pyarray.h",
    "pybase.h",
    "pydatabase.h",
    "pydate.h",
    "pyframe.h",
    "pymisc.h",
    "pymyelin.h",
    "pynet.h",
    "pyparser.h",
    "pyphrase.h",
    "pyrecordio.h",
    "pystore.h",
    "pystring.h",
    "pytask.h",
    "pyweb.h",
    "pywiki.h",
  ],
  deps = [
    "//sling/base",
    "//sling/db:dbclient",
    "//sling/file",
    "//sling/file:recordio",
    "//sling/frame",
    "//sling/frame:json",
    "//sling/frame:turtle",
    "//sling/frame:xml",
    "//sling/myelin:flow",
    "//sling/myelin:compiler",
    "//sling/myelin:compute",
    "//sling/myelin:gradient",
    "//sling/myelin:profile",
    "//sling/net:http-server",
    "//sling/net:static-content",
    "//sling/nlp/document",
    "//sling/nlp/document:annotator",
    "//sling/nlp/document:document-tokenizer",
    "//sling/nlp/document:lex",
    "//sling/nlp/document:phrase-tokenizer",
    "//sling/nlp/embedding:plausibility-model",
    "//sling/nlp/kb:calendar",
    "//sling/nlp/kb:facts",
    "//sling/nlp/kb:phrase-table",
    "//sling/nlp/parser",
    "//sling/nlp/parser:components",
    "//sling/nlp/parser:frame-evaluation",
    "//sling/nlp/web:text-extractor",
    "//sling/nlp/wiki:wikidata-converter",
    "//sling/nlp/wiki:wiki-annotator",
    "//sling/nlp/wiki:wiki-parser",
    "//sling/nlp/wiki:wikipedia-map",
    "//sling/task:dashboard",
    "//sling/task:job",
    "//sling/task:process",
    "//sling/stream:file",
    "//sling/stream:file-input",
    "//sling/stream:input",
    "//sling/stream:memory",
    "//sling/string:text",
    "//sling/util:mutex",
    "//sling/web:web-archive",
    "//sling/web:rfc822-headers",
    "//third_party/jit:cpu",
  ],
  copts = [
    "-Wno-write-strings",
    "-Wno-invalid-offsetof",
    "-DPYVER=36"
  ],
  alwayslink = 1,
)

cc_library(
  name = "tasks",
  deps = [
    "//sling/nlp/wiki:aliases",
    "//sling/nlp/wiki:wikidata-importer",
    "//sling/nlp/wiki:wikipedia-importer",
    "//sling/nlp/wiki:wikipedia-documents",
    "//sling/nlp/wiki:wikipedia-links",

    "//sling/nlp/document:vocabulary-builder",

    "//sling/nlp/kb:fact-lexicon",
    "//sling/nlp/kb:fanin",
    "//sling/nlp/kb:xref-builder",
    "//sling/nlp/kb:reconciler",
    "//sling/nlp/kb:name-table-builder",
    "//sling/nlp/kb:phrase-table-builder",
    "//sling/nlp/kb:property-usage",

    "//sling/nlp/search:search-dictionary-builder",
    "//sling/nlp/search:search-index-builder",

    "//sling/nlp/embedding:fact-embeddings",
    "//sling/nlp/embedding:word-embeddings",
    "//sling/nlp/embedding:fact-plausibility",

    "//sling/nlp/parser:parser-trainer",

    "//sling/nlp/silver:components",

    "//sling/task:documents",
    "//sling/task:frame-store-reader",
    "//sling/task:frame-store-writer",
    "//sling/task:sharder",
    "//sling/task:sorter",
    "//sling/task:record-file-reader",
    "//sling/task:record-file-writer",
    "//sling/task:text-file-reader",
    "//sling/task:text-file-writer",
    "//sling/task:text-map-reader",
    "//sling/task:text-map-writer",
    "//sling/task:database-reader",
    "//sling/task:database-writer",
    "//sling/task:pipe-reader",
    "//sling/task:workers",
    "//sling/task:null-sink",
  ],
)

cc_binary(
  name = "pysling.so",
  deps = [
    ":pyapi",
    ":tasks",
    "//sling/base",
    "//sling/file:posix",
  ],
  linkshared = 1,
  linkstatic = 1,
)

